Unit 3 - Advanced Data Types
  Multi Dimensional Arrays
    An array stores a indexed list of values starting at 0
    When you create an array you use []
    Arrays are the most commonly used objects
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  2D Arrays
    An array is created with [] so a 2D array is just an array with another array in it
    [['first', 0], ['second', 1], ['third', 2]]
    The array above can be referenced  using 2 indexes
    [0][0] = 'first'
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  console.table
    Now we can use an output called console.table
    This will output all of the information in an easy to read table
    ┌─────────┬─────────────┬───┐
    │ (index) │      0      │ 1 │
    ├─────────┼─────────────┼───┤
    │    0    │  'School'   │ 8 │
    │    1    │   'Food'    │ 1 │
    │    2    │  'Driving'  │ 2 │
    │    3    │ 'Free Time' │ 6 │
    │    4    │ 'Sleeping'  │ 7 │
    └─────────┴─────────────┴───┘
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Accessing a 2D Array
    Example array values, using the table makes it very easy to see which value you want to take.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Splicing
    Splicing is the act of inserting more informaion into the array without changing any of the existing information
    This is so useful because it will move all of the indexes over for you
    This works on any size array, you just need to say where you are splicing it

    Lets add studying into our array and give it 2 hours

    day.splice(3,0, ['study', 2])

    If you look at the table again you will see that everything was moved up 1 index to make room.
    And now let's remove 2 hours from 'free time' to make time in our schedule remember that is was moved to index 4
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Iterating over a 2D array
    Most coders will use i and j to loop through 2 items you can always add k,l,m,n,... if you need more
    Example
    // Loop the rows (vertically)
    for(let i = 0; j<activities.length; i++){
      //Loop the columns(horizontally)
      for(let j = 0; j< activities[i].length; j++){
        console.log(`[${i},${j}] = ${activites[i][j]}`); 
      }
    }

    I would recommend using 'in' instead
    This will make it do the same thing that you were doing but in half the code
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~